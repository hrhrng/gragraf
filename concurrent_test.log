2025-07-09 01:13:36,427 [INFO] __main__: 🧪 Starting concurrent state update integration test
2025-07-09 01:13:36,427 [INFO] __main__: ✅ Environment check passed
2025-07-09 01:13:36,427 [INFO] __main__: 
============================================================
2025-07-09 01:13:36,427 [INFO] __main__: TEST 1: Stream-based execution
2025-07-09 01:13:36,427 [INFO] __main__: ============================================================
2025-07-09 01:13:36,427 [INFO] __main__: 🚀 Starting concurrent agents integration test
2025-07-09 01:13:36,427 [INFO] __main__: 📋 Created test graph DSL
2025-07-09 01:13:36,427 [INFO] __main__: Graph DSL: {
  "nodes": [
    {
      "id": "start_1",
      "type": "start",
      "config": {
        "inputs": [
          {
            "name": "user"
          }
        ],
        "user": "hi"
      }
    },
    {
      "id": "end_1",
      "type": "end",
      "config": {
        "outputs": [
          {
            "name": "x",
            "value": "{{agent_3_output}}"
          },
          {
            "name": "y",
            "value": "{{agent_4_output}}"
          },
          {
            "name": "u",
            "value": "{{user}}"
          }
        ]
      }
    },
    {
      "id": "agent_3",
      "type": "agent",
      "config": {
        "model_name": "gpt-4o-mini",
        "temperature": 0.7,
        "system_prompt": "You are a helpful assistant.",
        "user_prompt": "{{user}}",
        "output_name": ""
      }
    },
    {
      "id": "agent_4",
      "type": "agent",
      "config": {
        "model_name": "gpt-4o-mini",
        "temperature": 0.7,
        "system_prompt": "You are a helpful assistant.",
        "user_prompt": "{{user}}",
        "output_name": ""
      }
    }
  ],
  "edges": [
    {
      "id": "reactflow__edge-start_1-agent_3",
      "source": "start_1",
      "target": "agent_3",
      "source_handle": null
    },
    {
      "id": "reactflow__edge-agent_3-end_1",
      "source": "agent_3",
      "target": "end_1",
      "source_handle": null
    },
    {
      "id": "reactflow__edge-start_1-agent_4",
      "source": "start_1",
      "target": "agent_4",
      "source_handle": null
    },
    {
      "id": "reactflow__edge-agent_4-end_1",
      "source": "agent_4",
      "target": "end_1",
      "source_handle": null
    }
  ]
}
2025-07-09 01:13:36,427 [INFO] __main__: 🔧 Starting graph compilation...
2025-07-09 01:13:36,427 [INFO] __main__: ✅ Graph structure validation passed
2025-07-09 01:13:36,428 [INFO] __main__: ✅ Topological order: ['start_1', 'agent_3', 'agent_4', 'end_1']
2025-07-09 01:13:36,428 [INFO] gragraf.nodes.agent: Using OpenAI proxy: https://api.gptsapi.net/v1
2025-07-09 01:13:36,688 [INFO] gragraf.nodes.agent: Using OpenAI proxy: https://api.gptsapi.net/v1
2025-07-09 01:13:36,691 [INFO] __main__: ✅ Graph compilation completed successfully
2025-07-09 01:13:36,691 [INFO] __main__: ✅ Graph compiled successfully
2025-07-09 01:13:36,691 [INFO] __main__: 🎯 Initial state: {'user': 'hi'}
2025-07-09 01:13:36,691 [INFO] __main__: === STATE UPDATE at INITIAL ===
2025-07-09 01:13:36,691 [INFO] __main__: State keys: ['user']
2025-07-09 01:13:36,691 [INFO] __main__: Flattened state: {'user': 'hi'}
2025-07-09 01:13:36,691 [INFO] __main__: ==================================================
2025-07-09 01:13:36,691 [INFO] __main__: 🏃 Starting graph execution...
2025-07-09 01:13:36,693 [INFO] gragraf.compiler: Applying direct state update: {'user': 'hi'}
2025-07-09 01:13:36,693 [INFO] gragraf.compiler: State after reducer: ['user']
2025-07-09 01:13:36,693 [INFO] gragraf.compiler: Applying direct state update: {}
2025-07-09 01:13:36,693 [INFO] gragraf.compiler: State after reducer: ['user']
2025-07-09 01:13:36,693 [INFO] __main__: 📊 Step 1: {'start_1': {}}
2025-07-09 01:13:36,693 [INFO] __main__: === STATE UPDATE at STEP_1 ===
2025-07-09 01:13:36,693 [INFO] __main__: State keys: ['start_1']
2025-07-09 01:13:36,693 [INFO] __main__: Flattened state: {'start_1': {}}
2025-07-09 01:13:36,693 [INFO] __main__: ==================================================
2025-07-09 01:13:36,694 [INFO] gragraf.nodes.agent: Agent agent_4 debug info: {'config_type': 'AgentConfig', 'state_variables': ['user'], 'field_analysis': {'model_name': {'is_template': False, 'value': 'gpt-4o-mini'}, 'temperature': {'is_simple': True, 'value': 0.7, 'type': 'float'}, 'system_prompt': {'is_template': False, 'value': 'You are a helpful assistant.'}, 'user_prompt': {'is_template': True, 'template_string': '{{user}}', 'validation': {'required_variables': ['user'], 'missing_variables': [], 'is_valid': True, 'available_variables': ['user']}}, 'output_name': {'is_template': False, 'value': ''}, 'variable_mappings': {'is_complex': True, 'type': 'dict'}}}
2025-07-09 01:13:36,695 [INFO] gragraf.nodes.agent: Agent agent_3 debug info: {'config_type': 'AgentConfig', 'state_variables': ['user'], 'field_analysis': {'model_name': {'is_template': False, 'value': 'gpt-4o-mini'}, 'temperature': {'is_simple': True, 'value': 0.7, 'type': 'float'}, 'system_prompt': {'is_template': False, 'value': 'You are a helpful assistant.'}, 'user_prompt': {'is_template': True, 'template_string': '{{user}}', 'validation': {'required_variables': ['user'], 'missing_variables': [], 'is_valid': True, 'available_variables': ['user']}}, 'output_name': {'is_template': False, 'value': ''}, 'variable_mappings': {'is_complex': True, 'type': 'dict'}}}
2025-07-09 01:13:36,695 [INFO] gragraf.utils.templating: Rendering config for AgentConfig with state keys: ['user']
2025-07-09 01:13:36,695 [INFO] gragraf.utils.templating: Rendering config for AgentConfig with state keys: ['user']
2025-07-09 01:13:36,695 [INFO] gragraf.utils.templating: Template validation: {'required_variables': ['user'], 'missing_variables': [], 'is_valid': True, 'available_variables': ['user']}
2025-07-09 01:13:36,695 [INFO] gragraf.utils.templating: Template validation: {'required_variables': ['user'], 'missing_variables': [], 'is_valid': True, 'available_variables': ['user']}
2025-07-09 01:13:36,695 [INFO] gragraf.utils.templating: Successfully rendered template: '{{user}}' -> 'hi'
2025-07-09 01:13:36,696 [INFO] gragraf.utils.templating: Successfully rendered template: '{{user}}' -> 'hi'
2025-07-09 01:13:36,696 [INFO] gragraf.utils.templating: Rendered field 'user_prompt': '{{user}}' -> 'hi'
2025-07-09 01:13:36,696 [INFO] gragraf.utils.templating: Rendered field 'user_prompt': '{{user}}' -> 'hi'
2025-07-09 01:13:36,701 [DEBUG] openai._base_client: Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f7c99778-b1af-4329-9702-fd9e2a02bbbe', 'json_data': {'messages': [{'content': 'You are a helpful assistant.', 'role': 'system'}, {'content': 'hi', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.7}}
2025-07-09 01:13:36,701 [DEBUG] openai._base_client: Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d31e7d82-4e11-4009-90d2-d516165024b2', 'json_data': {'messages': [{'content': 'You are a helpful assistant.', 'role': 'system'}, {'content': 'hi', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.7}}
2025-07-09 01:13:36,721 [DEBUG] openai._base_client: Sending HTTP Request: POST https://api.gptsapi.net/v1/chat/completions
2025-07-09 01:13:36,722 [DEBUG] openai._base_client: Sending HTTP Request: POST https://api.gptsapi.net/v1/chat/completions
2025-07-09 01:13:36,722 [DEBUG] httpcore.connection: connect_tcp.started host='api.gptsapi.net' port=443 local_address=None timeout=None socket_options=None
2025-07-09 01:13:36,722 [DEBUG] httpcore.connection: connect_tcp.started host='api.gptsapi.net' port=443 local_address=None timeout=None socket_options=None
2025-07-09 01:13:36,906 [DEBUG] httpcore.connection: connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10eab08c0>
2025-07-09 01:13:36,906 [DEBUG] httpcore.connection: connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10e9c7740>
2025-07-09 01:13:36,906 [DEBUG] httpcore.connection: start_tls.started ssl_context=<ssl.SSLContext object at 0x10dc5b250> server_hostname='api.gptsapi.net' timeout=None
2025-07-09 01:13:36,906 [DEBUG] httpcore.connection: start_tls.started ssl_context=<ssl.SSLContext object at 0x10dc5b250> server_hostname='api.gptsapi.net' timeout=None
2025-07-09 01:13:37,093 [DEBUG] httpcore.connection: start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10e758c80>
2025-07-09 01:13:37,093 [DEBUG] httpcore.connection: start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10eab0c20>
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: send_request_headers.started request=<Request [b'POST']>
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: send_request_headers.started request=<Request [b'POST']>
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: send_request_headers.complete
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: send_request_headers.complete
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: send_request_body.started request=<Request [b'POST']>
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: send_request_body.started request=<Request [b'POST']>
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: send_request_body.complete
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: receive_response_headers.started request=<Request [b'POST']>
2025-07-09 01:13:37,093 [DEBUG] httpcore.http11: send_request_body.complete
2025-07-09 01:13:37,094 [DEBUG] httpcore.http11: receive_response_headers.started request=<Request [b'POST']>
2025-07-09 01:13:38,694 [DEBUG] httpcore.http11: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 08 Jul 2025 17:13:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'zstd'), (b'x-oneapi-request-id', b'2025070901133887712008Ytr5o6mu'), (b'x-trace-id', b'a349db96-6192-437b-bef9-b2d9d9ad99dc'), (b'strict-transport-security', b'max-age=0; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Report-To', b'{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=qlae2NFiyUHpxnXqtjz0glA3pVqwPRzHeooDFUZuqmjxJiqtl%2BoDRfFdBN%2Fvbii01oSeUfSLvyzV17G9qSRGcMst4nP4SKGjeCN4e1kcFzxcNUMVP2C0hK8cWKzOcLTfTbE%3D"}],"group":"cf-nel","max_age":604800}'), (b'NEL', b'{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95c136987aa04f73-SEA'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'server-timing', b'cfL4;desc="?proto=TCP&rtt=181702&min_rtt=180949&rtt_var=51566&sent=7&recv=9&lost=0&retrans=0&sent_bytes=2839&recv_bytes=1343&delivery_rate=23210&cwnd=252&unsent_bytes=0&cid=d2b7d8a7253f5157&ts=1603&x=0"')])
2025-07-09 01:13:38,694 [INFO] httpx: HTTP Request: POST https://api.gptsapi.net/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-09 01:13:38,694 [DEBUG] httpcore.http11: receive_response_body.started request=<Request [b'POST']>
2025-07-09 01:13:38,694 [DEBUG] httpcore.http11: receive_response_body.complete
2025-07-09 01:13:38,694 [DEBUG] httpcore.http11: response_closed.started
2025-07-09 01:13:38,694 [DEBUG] httpcore.http11: response_closed.complete
2025-07-09 01:13:38,695 [DEBUG] openai._base_client: HTTP Response: POST https://api.gptsapi.net/v1/chat/completions "200 OK" Headers({'date': 'Tue, 08 Jul 2025 17:13:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'zstd', 'x-oneapi-request-id': '2025070901133887712008Ytr5o6mu', 'x-trace-id': 'a349db96-6192-437b-bef9-b2d9d9ad99dc', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'report-to': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=qlae2NFiyUHpxnXqtjz0glA3pVqwPRzHeooDFUZuqmjxJiqtl%2BoDRfFdBN%2Fvbii01oSeUfSLvyzV17G9qSRGcMst4nP4SKGjeCN4e1kcFzxcNUMVP2C0hK8cWKzOcLTfTbE%3D"}],"group":"cf-nel","max_age":604800}', 'nel': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95c136987aa04f73-SEA', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&rtt=181702&min_rtt=180949&rtt_var=51566&sent=7&recv=9&lost=0&retrans=0&sent_bytes=2839&recv_bytes=1343&delivery_rate=23210&cwnd=252&unsent_bytes=0&cid=d2b7d8a7253f5157&ts=1603&x=0"'})
2025-07-09 01:13:38,695 [DEBUG] openai._base_client: request_id: None
2025-07-09 01:13:38,699 [INFO] gragraf.nodes.agent: Agent agent_3 completed successfully. Output key: agent_3_output
2025-07-09 01:13:38,699 [INFO] gragraf.nodes.agent: Agent agent_3 returning state update: {'agent_3_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:38,699 [INFO] __main__: 📊 Step 2: {'agent_3': {'agent_3_output': 'Hello! How can I assist you today?'}}
2025-07-09 01:13:38,699 [INFO] __main__: === STATE UPDATE at STEP_2 ===
2025-07-09 01:13:38,699 [INFO] __main__: State keys: ['agent_3']
2025-07-09 01:13:38,699 [INFO] __main__: Flattened state: {'agent_3': {'agent_3_output': 'Hello! How can I assist you today?'}}
2025-07-09 01:13:38,699 [INFO] __main__: ==================================================
2025-07-09 01:13:38,730 [DEBUG] httpcore.http11: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 08 Jul 2025 17:13:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'zstd'), (b'x-oneapi-request-id', b'2025070901133877674172dDip6if0'), (b'x-trace-id', b'74b8e7a0-6ad0-4a50-a323-4a247d39db6f'), (b'strict-transport-security', b'max-age=0; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Report-To', b'{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=ZnRNU5WqcQgWT%2F5fD1%2Fk%2Fl2nGyTPCS%2FXo5djWqpMQp7AKelUnHk5sN9O%2F1UWI%2FRPbX%2Bwvbjl49bWuEBnTwQYDSsEy5WS7IKvqz5aRA2llZiRb3ZpPCR%2FIsAkvDeUtpBB78o%3D"}],"group":"cf-nel","max_age":604800}'), (b'NEL', b'{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95c136987a2fc366-SEA'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'server-timing', b'cfL4;desc="?proto=TCP&rtt=181815&min_rtt=180908&rtt_var=68488&sent=7&recv=9&lost=0&retrans=0&sent_bytes=2838&recv_bytes=1343&delivery_rate=23216&cwnd=252&unsent_bytes=0&cid=8fa4db9f9f5e192d&ts=1640&x=0"')])
2025-07-09 01:13:38,730 [INFO] httpx: HTTP Request: POST https://api.gptsapi.net/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-09 01:13:38,730 [DEBUG] httpcore.http11: receive_response_body.started request=<Request [b'POST']>
2025-07-09 01:13:38,731 [DEBUG] httpcore.http11: receive_response_body.complete
2025-07-09 01:13:38,731 [DEBUG] httpcore.http11: response_closed.started
2025-07-09 01:13:38,731 [DEBUG] httpcore.http11: response_closed.complete
2025-07-09 01:13:38,731 [DEBUG] openai._base_client: HTTP Response: POST https://api.gptsapi.net/v1/chat/completions "200 OK" Headers({'date': 'Tue, 08 Jul 2025 17:13:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'zstd', 'x-oneapi-request-id': '2025070901133877674172dDip6if0', 'x-trace-id': '74b8e7a0-6ad0-4a50-a323-4a247d39db6f', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'report-to': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=ZnRNU5WqcQgWT%2F5fD1%2Fk%2Fl2nGyTPCS%2FXo5djWqpMQp7AKelUnHk5sN9O%2F1UWI%2FRPbX%2Bwvbjl49bWuEBnTwQYDSsEy5WS7IKvqz5aRA2llZiRb3ZpPCR%2FIsAkvDeUtpBB78o%3D"}],"group":"cf-nel","max_age":604800}', 'nel': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95c136987a2fc366-SEA', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&rtt=181815&min_rtt=180908&rtt_var=68488&sent=7&recv=9&lost=0&retrans=0&sent_bytes=2838&recv_bytes=1343&delivery_rate=23216&cwnd=252&unsent_bytes=0&cid=8fa4db9f9f5e192d&ts=1640&x=0"'})
2025-07-09 01:13:38,731 [DEBUG] openai._base_client: request_id: None
2025-07-09 01:13:38,731 [INFO] gragraf.nodes.agent: Agent agent_4 completed successfully. Output key: agent_4_output
2025-07-09 01:13:38,731 [INFO] gragraf.nodes.agent: Agent agent_4 returning state update: {'agent_4_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:38,731 [INFO] __main__: 📊 Step 3: {'agent_4': {'agent_4_output': 'Hello! How can I assist you today?'}}
2025-07-09 01:13:38,732 [INFO] __main__: === STATE UPDATE at STEP_3 ===
2025-07-09 01:13:38,732 [INFO] __main__: State keys: ['agent_4']
2025-07-09 01:13:38,732 [INFO] __main__: Flattened state: {'agent_4': {'agent_4_output': 'Hello! How can I assist you today?'}}
2025-07-09 01:13:38,732 [INFO] __main__: ==================================================
2025-07-09 01:13:38,732 [INFO] gragraf.compiler: Applying direct state update: {'agent_3_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:38,732 [INFO] gragraf.compiler: State after reducer: ['user', 'agent_3_output']
2025-07-09 01:13:38,732 [INFO] gragraf.compiler: Applying direct state update: {'agent_4_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:38,732 [INFO] gragraf.compiler: State after reducer: ['user', 'agent_3_output', 'agent_4_output']
2025-07-09 01:13:38,732 [INFO] gragraf.compiler: Applying direct state update: {}
2025-07-09 01:13:38,732 [INFO] gragraf.compiler: State after reducer: ['user', 'agent_3_output', 'agent_4_output']
2025-07-09 01:13:38,732 [INFO] __main__: 📊 Step 4: {'end_1': {}}
2025-07-09 01:13:38,732 [INFO] __main__: === STATE UPDATE at STEP_4 ===
2025-07-09 01:13:38,732 [INFO] __main__: State keys: ['end_1']
2025-07-09 01:13:38,732 [INFO] __main__: Flattened state: {'end_1': {}}
2025-07-09 01:13:38,732 [INFO] __main__: ==================================================
2025-07-09 01:13:38,732 [INFO] __main__: ✅ Test completed successfully
2025-07-09 01:13:38,732 [INFO] __main__: 
============================================================
2025-07-09 01:13:38,732 [INFO] __main__: TEST 2: Simple invoke execution
2025-07-09 01:13:38,732 [INFO] __main__: ============================================================
2025-07-09 01:13:38,732 [INFO] __main__: 🔍 Running simple invoke test...
2025-07-09 01:13:38,732 [INFO] __main__: 🔧 Starting graph compilation...
2025-07-09 01:13:38,732 [INFO] __main__: ✅ Graph structure validation passed
2025-07-09 01:13:38,732 [INFO] __main__: ✅ Topological order: ['start_1', 'agent_3', 'agent_4', 'end_1']
2025-07-09 01:13:38,733 [INFO] gragraf.nodes.agent: Using OpenAI proxy: https://api.gptsapi.net/v1
2025-07-09 01:13:38,733 [INFO] gragraf.nodes.agent: Using OpenAI proxy: https://api.gptsapi.net/v1
2025-07-09 01:13:38,734 [INFO] __main__: ✅ Graph compilation completed successfully
2025-07-09 01:13:38,734 [INFO] __main__: Invoking graph with state: {'user': 'hi'}
2025-07-09 01:13:38,735 [INFO] gragraf.compiler: Applying direct state update: {'user': 'hi'}
2025-07-09 01:13:38,735 [INFO] gragraf.compiler: State after reducer: ['user']
2025-07-09 01:13:38,735 [INFO] gragraf.compiler: Applying direct state update: {}
2025-07-09 01:13:38,735 [INFO] gragraf.compiler: State after reducer: ['user']
2025-07-09 01:13:38,735 [INFO] gragraf.nodes.agent: Agent agent_3 debug info: {'config_type': 'AgentConfig', 'state_variables': ['user'], 'field_analysis': {'model_name': {'is_template': False, 'value': 'gpt-4o-mini'}, 'temperature': {'is_simple': True, 'value': 0.7, 'type': 'float'}, 'system_prompt': {'is_template': False, 'value': 'You are a helpful assistant.'}, 'user_prompt': {'is_template': True, 'template_string': '{{user}}', 'validation': {'required_variables': ['user'], 'missing_variables': [], 'is_valid': True, 'available_variables': ['user']}}, 'output_name': {'is_template': False, 'value': ''}, 'variable_mappings': {'is_complex': True, 'type': 'dict'}}}
2025-07-09 01:13:38,736 [INFO] gragraf.nodes.agent: Agent agent_4 debug info: {'config_type': 'AgentConfig', 'state_variables': ['user'], 'field_analysis': {'model_name': {'is_template': False, 'value': 'gpt-4o-mini'}, 'temperature': {'is_simple': True, 'value': 0.7, 'type': 'float'}, 'system_prompt': {'is_template': False, 'value': 'You are a helpful assistant.'}, 'user_prompt': {'is_template': True, 'template_string': '{{user}}', 'validation': {'required_variables': ['user'], 'missing_variables': [], 'is_valid': True, 'available_variables': ['user']}}, 'output_name': {'is_template': False, 'value': ''}, 'variable_mappings': {'is_complex': True, 'type': 'dict'}}}
2025-07-09 01:13:38,736 [INFO] gragraf.utils.templating: Rendering config for AgentConfig with state keys: ['user']
2025-07-09 01:13:38,736 [INFO] gragraf.utils.templating: Rendering config for AgentConfig with state keys: ['user']
2025-07-09 01:13:38,736 [INFO] gragraf.utils.templating: Template validation: {'required_variables': ['user'], 'missing_variables': [], 'is_valid': True, 'available_variables': ['user']}
2025-07-09 01:13:38,736 [INFO] gragraf.utils.templating: Template validation: {'required_variables': ['user'], 'missing_variables': [], 'is_valid': True, 'available_variables': ['user']}
2025-07-09 01:13:38,736 [INFO] gragraf.utils.templating: Successfully rendered template: '{{user}}' -> 'hi'
2025-07-09 01:13:38,737 [INFO] gragraf.utils.templating: Successfully rendered template: '{{user}}' -> 'hi'
2025-07-09 01:13:38,737 [INFO] gragraf.utils.templating: Rendered field 'user_prompt': '{{user}}' -> 'hi'
2025-07-09 01:13:38,737 [INFO] gragraf.utils.templating: Rendered field 'user_prompt': '{{user}}' -> 'hi'
2025-07-09 01:13:38,738 [DEBUG] openai._base_client: Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4c967fe9-2ebe-4107-9058-ab56c20c2999', 'json_data': {'messages': [{'content': 'You are a helpful assistant.', 'role': 'system'}, {'content': 'hi', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.7}}
2025-07-09 01:13:38,739 [DEBUG] openai._base_client: Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-98110c12-0549-4a32-9722-f62d1b12c6c1', 'json_data': {'messages': [{'content': 'You are a helpful assistant.', 'role': 'system'}, {'content': 'hi', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.7}}
2025-07-09 01:13:38,739 [DEBUG] openai._base_client: Sending HTTP Request: POST https://api.gptsapi.net/v1/chat/completions
2025-07-09 01:13:38,739 [DEBUG] openai._base_client: Sending HTTP Request: POST https://api.gptsapi.net/v1/chat/completions
2025-07-09 01:13:38,739 [DEBUG] httpcore.http11: send_request_headers.started request=<Request [b'POST']>
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: send_request_headers.started request=<Request [b'POST']>
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: send_request_headers.complete
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: send_request_body.started request=<Request [b'POST']>
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: send_request_headers.complete
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: send_request_body.started request=<Request [b'POST']>
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: send_request_body.complete
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: send_request_body.complete
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: receive_response_headers.started request=<Request [b'POST']>
2025-07-09 01:13:38,740 [DEBUG] httpcore.http11: receive_response_headers.started request=<Request [b'POST']>
2025-07-09 01:13:39,989 [DEBUG] httpcore.http11: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 08 Jul 2025 17:13:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'zstd'), (b'x-oneapi-request-id', b'20250709011339500963876Ois9bnNu'), (b'x-trace-id', b'1c645c22-db4a-4fe1-ab93-79010be51f9c'), (b'strict-transport-security', b'max-age=0; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Report-To', b'{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=z24ljNfCo4JitSlg7Kq3DZWWZ2VO3LcMtBHVl9nnehqrUV8AaZUnxzcgf1qsooK8CMFRKjuZSoQQJwvSlcUCADyW3P%2BOnUlMbZ9HxUxQ%2BPwFZyel1J7O7SyLbcveQTQ7oQ0%3D"}],"group":"cf-nel","max_age":604800}'), (b'NEL', b'{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95c136a2bc364f73-SEA'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'server-timing', b'cfL4;desc="?proto=TCP&rtt=182004&min_rtt=180949&rtt_var=29530&sent=14&recv=15&lost=0&retrans=0&sent_bytes=4786&recv_bytes=2089&delivery_rate=30601&cwnd=256&unsent_bytes=0&cid=d2b7d8a7253f5157&ts=2901&x=0"')])
2025-07-09 01:13:39,990 [INFO] httpx: HTTP Request: POST https://api.gptsapi.net/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-09 01:13:39,990 [DEBUG] httpcore.http11: receive_response_body.started request=<Request [b'POST']>
2025-07-09 01:13:39,990 [DEBUG] httpcore.http11: receive_response_body.complete
2025-07-09 01:13:39,990 [DEBUG] httpcore.http11: response_closed.started
2025-07-09 01:13:39,990 [DEBUG] httpcore.http11: response_closed.complete
2025-07-09 01:13:39,990 [DEBUG] openai._base_client: HTTP Response: POST https://api.gptsapi.net/v1/chat/completions "200 OK" Headers({'date': 'Tue, 08 Jul 2025 17:13:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'zstd', 'x-oneapi-request-id': '20250709011339500963876Ois9bnNu', 'x-trace-id': '1c645c22-db4a-4fe1-ab93-79010be51f9c', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'report-to': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=z24ljNfCo4JitSlg7Kq3DZWWZ2VO3LcMtBHVl9nnehqrUV8AaZUnxzcgf1qsooK8CMFRKjuZSoQQJwvSlcUCADyW3P%2BOnUlMbZ9HxUxQ%2BPwFZyel1J7O7SyLbcveQTQ7oQ0%3D"}],"group":"cf-nel","max_age":604800}', 'nel': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95c136a2bc364f73-SEA', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&rtt=182004&min_rtt=180949&rtt_var=29530&sent=14&recv=15&lost=0&retrans=0&sent_bytes=4786&recv_bytes=2089&delivery_rate=30601&cwnd=256&unsent_bytes=0&cid=d2b7d8a7253f5157&ts=2901&x=0"'})
2025-07-09 01:13:39,990 [DEBUG] openai._base_client: request_id: None
2025-07-09 01:13:39,990 [INFO] gragraf.nodes.agent: Agent agent_3 completed successfully. Output key: agent_3_output
2025-07-09 01:13:39,990 [INFO] gragraf.nodes.agent: Agent agent_3 returning state update: {'agent_3_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:40,029 [DEBUG] httpcore.http11: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 08 Jul 2025 17:13:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'zstd'), (b'x-oneapi-request-id', b'20250709011339500725685LMXcYwMB'), (b'x-trace-id', b'82a32e35-cc07-4504-a256-0c9a77a6224c'), (b'strict-transport-security', b'max-age=0; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Report-To', b'{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=j6hCszrsIWepiNG5W9tV0j%2Ff5ogbHqERp%2B%2BaruTEJ9zFCYyjHCMMZlqXv573ZV6e50cJ0%2F4afiJYX2TghS%2F4jBgRpFnem5%2B6voNeJPCZ2exPW0V4Qv%2BZsSaqnURQ8n4b4SQ%3D"}],"group":"cf-nel","max_age":604800}'), (b'NEL', b'{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95c136a2ba6ac366-SEA'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'server-timing', b'cfL4;desc="?proto=TCP&rtt=181915&min_rtt=180908&rtt_var=51566&sent=13&recv=12&lost=0&retrans=0&sent_bytes=4796&recv_bytes=2089&delivery_rate=30665&cwnd=256&unsent_bytes=0&cid=8fa4db9f9f5e192d&ts=2940&x=0"')])
2025-07-09 01:13:40,029 [INFO] httpx: HTTP Request: POST https://api.gptsapi.net/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-09 01:13:40,030 [DEBUG] httpcore.http11: receive_response_body.started request=<Request [b'POST']>
2025-07-09 01:13:40,030 [DEBUG] httpcore.http11: receive_response_body.complete
2025-07-09 01:13:40,030 [DEBUG] httpcore.http11: response_closed.started
2025-07-09 01:13:40,030 [DEBUG] httpcore.http11: response_closed.complete
2025-07-09 01:13:40,030 [DEBUG] openai._base_client: HTTP Response: POST https://api.gptsapi.net/v1/chat/completions "200 OK" Headers({'date': 'Tue, 08 Jul 2025 17:13:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'zstd', 'x-oneapi-request-id': '20250709011339500725685LMXcYwMB', 'x-trace-id': '82a32e35-cc07-4504-a256-0c9a77a6224c', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'report-to': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=j6hCszrsIWepiNG5W9tV0j%2Ff5ogbHqERp%2B%2BaruTEJ9zFCYyjHCMMZlqXv573ZV6e50cJ0%2F4afiJYX2TghS%2F4jBgRpFnem5%2B6voNeJPCZ2exPW0V4Qv%2BZsSaqnURQ8n4b4SQ%3D"}],"group":"cf-nel","max_age":604800}', 'nel': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95c136a2ba6ac366-SEA', 'alt-svc': 'h3=":443"; ma=86400', 'server-timing': 'cfL4;desc="?proto=TCP&rtt=181915&min_rtt=180908&rtt_var=51566&sent=13&recv=12&lost=0&retrans=0&sent_bytes=4796&recv_bytes=2089&delivery_rate=30665&cwnd=256&unsent_bytes=0&cid=8fa4db9f9f5e192d&ts=2940&x=0"'})
2025-07-09 01:13:40,030 [DEBUG] openai._base_client: request_id: None
2025-07-09 01:13:40,030 [INFO] gragraf.nodes.agent: Agent agent_4 completed successfully. Output key: agent_4_output
2025-07-09 01:13:40,030 [INFO] gragraf.nodes.agent: Agent agent_4 returning state update: {'agent_4_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:40,031 [INFO] gragraf.compiler: Applying direct state update: {'agent_3_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:40,031 [INFO] gragraf.compiler: State after reducer: ['user', 'agent_3_output']
2025-07-09 01:13:40,031 [INFO] gragraf.compiler: Applying direct state update: {'agent_4_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:40,031 [INFO] gragraf.compiler: State after reducer: ['user', 'agent_3_output', 'agent_4_output']
2025-07-09 01:13:40,031 [INFO] gragraf.compiler: Applying direct state update: {}
2025-07-09 01:13:40,031 [INFO] gragraf.compiler: State after reducer: ['user', 'agent_3_output', 'agent_4_output']
2025-07-09 01:13:40,031 [INFO] __main__: ✅ Invoke result: {'user': 'hi', 'agent_3_output': 'Hello! How can I assist you today?', 'agent_4_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:40,031 [INFO] __main__: === STATE UPDATE at FINAL_RESULT ===
2025-07-09 01:13:40,031 [INFO] __main__: State keys: ['user', 'agent_3_output', 'agent_4_output']
2025-07-09 01:13:40,031 [INFO] __main__: Flattened state: {'user': 'hi', 'agent_3_output': 'Hello! How can I assist you today?', 'agent_4_output': 'Hello! How can I assist you today?'}
2025-07-09 01:13:40,031 [INFO] __main__: ==================================================
2025-07-09 01:13:40,031 [INFO] __main__: 
============================================================
2025-07-09 01:13:40,031 [INFO] __main__: TEST SUMMARY
2025-07-09 01:13:40,031 [INFO] __main__: ============================================================
2025-07-09 01:13:40,031 [INFO] __main__: Stream test: ✅ PASSED
2025-07-09 01:13:40,031 [INFO] __main__: Invoke test: ✅ PASSED
2025-07-09 01:13:40,031 [INFO] __main__: 🎉 All tests passed!
